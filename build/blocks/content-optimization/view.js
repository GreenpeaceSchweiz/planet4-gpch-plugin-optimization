(()=>{const t=document.querySelectorAll(".gp-optimize-container");console.log("Starting Optimize"),t.forEach((t=>{if("true"===t.dataset.status&&void 0!==t.dataset.optimizationId){const a=t.querySelectorAll(".gp-optimize-variant"),e=((t,a)=>{const e=localStorage.getItem("gp-optimize-"+t);if(void 0!==e)for(const t of a)if(t.dataset.variantId===e)return console.log("Found stored variant ID: ",e),e;const n=[];for(const t of a){let a=parseInt(t.dataset.targetPercentage);isNaN(a)&&(a=50),n.push({variantId:t.dataset.variantId,weight:a})}console.log("Weighted random data: ",n);const i=(t=>{const a=t.reduce(((t,a,e)=>{var n;return t.push(a.weight+(null!==(n=t[e-1])&&void 0!==n?n:0)),t}),[]),e=Math.random()*a.at(-1);return t[a.findIndex((t=>t>e))]})(n);return localStorage.setItem("gp-optimize-"+t,i.variantId),console.log("Selected winning variant: ",i.variantId),i.variantId})(t.dataset.optimizationId,a);let n;console.log("Winning variant for Optimization "+t.dataset.optimizationId+" is "+e);for(const t of a)t.dataset.variantId===e?(t.style.display="block",n=t):t.style.display="none";"undefined"!=typeof mixpanel&&mixpanel.track("$experiment_started",{"Experiment name":t.dataset.optimizationName,"Variant name":n.dataset.variantName})}}))})();